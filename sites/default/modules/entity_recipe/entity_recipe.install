<?php 

/**
 * Install file for the Entity recipe module.
 */

/**
 * Implements hook_schema().
 *
 * Defines our entity base tables.
 */
function entity_recipe_schema() {
	// Table for the main ingredient entity.
  $schema['ingredient'] = array(
    'description' => 'Stores information about each ingredient.',
    'fields' => array(
      'iid' => array(
        'description' => 'Primary key',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Name of the ingredient',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'type' => array(
      	'description' => 'The type of this ingredient.',
      	'type' => 'varchar',
      	'length' => 32,
      	'not null' => TRUE,
      	'default' => 'standard',
      ),
    ),
    'primary key' => array(
      'iid',
    ),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );
  // Table for the ingredient bundle type.
  $schema['ingredient_type'] = array(
  	'description' => 'Stores information about defined ingredient types.',
  	'fields' => array(
  		'id' => array(
  			'type' => 'serial',
  			'not null' => TRUE,
  			'description' => 'Primary key: Unique ingredient type ID.',
  		),
  		'type' => array(
  			'description' => 'The machine-readable name of this ingredient type.',
  			'type' => 'varchar',
  			'length' => 32,
  			'not null' => TRUE,
  		),
  		'label' => array(
  			'description' => 'The human-readable name of this ingredient type.',
  			'type' => 'varchar',
  			'length' => 255,
  			'not null' => TRUE,
  			'default' => '',
  		),
  		'weight' => array(
  			'description' => 'The weight of this ingredient type compared to others.',
  			'type' => 'int',
  			'not null' => TRUE,
  			'size' => 'tiny',
  			'default' => 0,
  		),
  		'data' => array(
  			'description' => 'A serialized array with additional data for this 
  				ingredient type.',
  			'type' => 'text',
  			'not null' => FALSE,
  			'size' => 'big',
  		),
  		'status' => array(
  			'description' => 'The exportable status of the entity type.',
  			'type' => 'int',
  			'not null' => TRUE,
  			'size' => 'tiny',
  			// Set to: ENTITY_CUSTOM (Not safe to use constants at this point)
  			'default' => 0x01,
  		),
  		'module' => array(
  			'description' => 'The name of providing module if the entity type has 
  				been defined in code.',
  			'type' => 'varchar',
  			'length' => 255,
  			'not null' => FALSE,
  		),
  	),
		'primary key' => array('id'),
		'unique keys' => array(
			'type' => array('type'),
		),
  );
  return $schema;
}