<?php

/**
 * @file 
 * 
 * Contains various examples of how to use Javascript in drupal.
 */

/**
 * Implements hook_init().
 */
function javascript_fun_init() {
  // Passing values from PHP to Javascript with a $settings array
  $settings = array(
    'helloWorld' => array(
      'display' => 'alert',
      'message' => 'This message was passed from PHP!',
    ),  
  );
  drupal_add_js($settings, 'setting');
}

/**
 * Implements hook_menu().
 */
function javascript_fun_menu() {
  $items = array();
  $items['javascript-fun/simple-form-example'] = array(
    'title' => 'Javascript Fun: Simple AJAX Example',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('javascript_fun_simple_form_example'),
    'access callback' => TRUE,  
  );
  $items['javascript-fun/link'] = array(
    'title' => 'Javascript Fun: Link',
    'page callback' => 'javascript_fun_link',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),  
  );
  $items['javascript-fun-link-callback'] = array(
    'page callback' => 'javascript_fun_link_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),  
  );
  return $items;
}

/**
 * Form-builder
 */
function javascript_fun_simple_form_example($form, &$form_state) {
  $form = array();
  // Define a form element with #ajax property which defines a callback function
  // and a wrapper to put the update from ajax response in.
  $form['hello_city'] = array(
    '#title' => t('Choose a city'),
    '#type' => 'select',
    '#options' => array(
      t('World') => t('World'),
      t('Chicago') => t('Chicago'),
      t('New York') => t('New York'),
      t('Los Angeles') => t('Los Angeles'),  
    ),
    '#ajax' => array(
      'callback' => 'javascript_fun_simple_form_callback',
      'wrapper' => 'ajax_markup_div',  
    ),    
  );
  // A form which serves as the wrapper for the update from ajax response.
  $form['ajax_markup'] = array(
    '#prefix' => '<div id="ajax_markup_div">',
    '#suffix' => '</div>',
    '#markup' => t('Hello World'),  
  );
  // If the form element 'hello_city' is populated this is an AJAX request and
  // we update the markup in our ajax wrapper.
  if (!empty($form_state['values']['hello_city'])) {
    $form['ajax_markup']['#markup'] = t('Hello !city', array(
      '!city' => $form_state['values']['hello_city'],  
    ));
  }
  return $form;
}

/**
 * Ajax form-callback.
 * 
 * Here we return the form element that is being replaced by the AJAX request.
 * Drupal renders it to the appropiate value and sends the updated HTML back
 * to the page where Drupal AJAX handlers retrieve the changes and updates the
 * wrapper. 
 */
function javascript_fun_simple_form_callback($form, &$form_state) {
  return $form['ajax_markup'];
}

/**
 * Page callback for javascript-fun/link. 
 */
function javascript_fun_link() {
  drupal_add_js('misc/ajax.js');
  $link = l(t('Say Hello'), 'javascript-fun-link-callback/nojs/', array(
    'attributes' => array('class' => 'use-ajax'),  
  ));
  return '<div>' . $link . '</div><div id="saying-hello"></div>';
}

/**
 * Page callback for javascript-fun-link-callback.
 */
function javascript_fun_link_response($type = 'ajax') {
  if ($type == 'ajax') {
    $output = t('Hello World');
    $commands = array();
    $commands[] = ajax_command_append('#saying-hello', $output);
    $page = array(
      '#type' => 'ajax',
      '#commands' => $commands,  
    );
    ajax_deliver($page);
  }
  // Else AJAX was disabled in the client and we are performing a full page
  // request.
  else {
    return t('Hello world in a new page');
  }
}